{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"<code>omc</code>: OpenShift Must-Gather Client","text":"<p><code>omc</code> tool has been created to allow engineers to inspect resources from a must-gather in the same way as they are retrieved with the <code>oc</code> command.</p>"},{"location":"#how-to-use","title":"How to use?","text":"<ul> <li>Collect a must-gather via <code>oc adm must-gather</code> or <code>oc adm inspect &lt;args&gt;</code>: <pre><code># oc adm inspect ns/default\nGathering data for ns/default...\nWrote inspect data to inspect.local.7055944464130050702.\n</code></pre></li> <li>Point it to an extracted must-gather: <pre><code>$ omc use inspect.local.7055944464130050702\n</code></pre></li> <li>Use it like <code>oc</code>: <pre><code>omc get clusterversion\nomc get pods -o wide -l app=etcd -n openshift-etcd\n</code></pre></li> </ul>"},{"location":"examples/","title":"Examples","text":"<ul> <li>Retrieving master nodes by label: <pre><code>$ omc get node -l node-role.kubernetes.io/master= -o name   \nnode/ip-10-0-132-49.eu-central-1.compute.internal\nnode/ip-10-0-178-163.eu-central-1.compute.internal\nnode/ip-10-0-202-187.eu-central-1.compute.internal\n</code></pre></li> <li>Retrieving etcd pod name from node name: <pre><code>$ omc get pod -l app=etcd -o jsonpath=\"{.items[?(@.spec.nodeName=='ip-10-0-132-49.eu-central-1.compute.internal')].metadata.name}\"\netcd-ip-10-0-132-49.eu-central-1.compute.internal\n</code></pre></li> <li>Check the ETCD status: <pre><code>$ omc etcd status\n+---------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+\n|         ENDPOINT          |        ID        | VERSION | DB SIZE | IS LEADER | IS LEARNER | RAFT TERM | RAFT INDEX | RAFT APPLIED INDEX | ERRORS |\n+---------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+\n| https://10.0.202.187:2379 | 9f38784f0a8ae43  | 3.4.14  | 147 MB  | false     | false      |        24 |    5682273 |            5682273 |        |\n| https://10.0.132.49:2379  | 83b81478d4b02409 | 3.4.14  | 148 MB  | false     | false      |        24 |    5682423 |            5682423 |        |\n| https://10.0.178.163:2379 | dd17c7ce8efc0349 | 3.4.14  | 147 MB  | true      | false      |        24 |    5682537 |            5682537 |        |\n+---------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+\n</code></pre></li> <li>Retrive the prometheus alerts in <code>firing</code> or <code>pending</code> state: <pre><code>$ omc prometheus alertrule -s firing,pending -o wide\nGROUP                        RULE                                 STATE     AGE   ALERTS   ACTIVE SINCE\ncluster-version              UpdateAvailable                      firing    11s   1        27 Jan 22 14:32 UTC\nlogging_fluentd.alerts       FluentdQueueLengthIncreasing         pending   27s   1        29 Jan 22 11:48 UTC\ngeneral.rules                Watchdog                             firing    11s   1        25 Jan 22 08:50 UTC\nopenshift-kubernetes.rules   AlertmanagerReceiversNotConfigured   firing    5s    1        25 Jan 22 08:51 UTC\n</code></pre></li> </ul>"},{"location":"install/install/","title":"Install","text":""},{"location":"install/install/#download-the-latest-binary-release","title":"Download the latest binary release","text":"Darwin Linux Windows  <pre><code>curl -sL https://github.com/gmeghnag/omc/releases/latest/download/omc_Darwin_x86_64.tar.gz | tar xzf - omc\nchmod +x ./omc\n</code></pre> <pre><code>curl -sL https://github.com/gmeghnag/omc/releases/latest/download/omc_Linux_x86_64.tar.gz | tar xzf - omc\nchmod +x ./omc   \n</code></pre> <pre><code>curl.exe -sL \"https://github.com/gmeghnag/omc/releases/latest/download/omc_Windows_x86_64.zip\" -o omc.zip \ntar -xf omc.zip\n./omc.exe \n</code></pre>"},{"location":"install/install/#build-from-the-source-code","title":"Build from the source code","text":"<pre><code>git clone https://github.com/gmeghnag/omc.git\ncd omc/\ngo install\n</code></pre>"},{"location":"install/upgrade/","title":"Upgrade","text":"<p> v2.1.0 Starting with <code>v2.1.0</code> it's possible to upgrade the tool by running <code>omc upgrade --to=&lt;version&gt;</code>: <pre><code>$ omc upgrade\nomc version is v2.1.0\n\nAvailable updates:\n\nv2.4.0\nv2.3.1\nv2.3.0\nv2.2.0\nv2.1.1\n</code></pre></p>"},{"location":"install/upgrade/#update-omc-to-a-newest-version","title":"Update <code>omc</code> to a newest version","text":"<p>This functionality works on <code>Linux x86_64</code> and <code>Darwin x86_64</code> architectures only.</p>"},{"location":"install/upgrade/#update-to-a-specific-version","title":"Update to a specific version","text":"<pre><code>omc upgrade --to=2.4.0 \n</code></pre>"},{"location":"install/upgrade/#update-to-the-latest-version","title":"Update to the latest version","text":"<pre><code>$ omc upgrade --to=latest \n</code></pre>"},{"location":"subcmds/alert/","title":"<code>omc alert</code>","text":"<p>It allows to retrieve the alerting rules <sup>1</sup><sup>2</sup> from <code>Prometheus</code> built-in component.</p>"},{"location":"subcmds/alert/#groups","title":"<code>groups</code>","text":"<p>Retrieve <code>PrometheusRules</code> grouped by component: <pre><code>omc prometheus alertgroup insights -oyaml\n</code></pre></p> <ol> <li> I'm a code annotation! I can contain <code>code</code>, formatted     text, images, ... basically anything that can be written in Markdown.</li> </ol> OUTPUT <pre><code>data:\n  groups:\n  - evaluationTime: 0.000948389\n    file: /etc/prometheus/rules/prometheus-k8s-rulefiles-0/openshift-insights-insights-prometheus-rules-1b383bfe-cf4a-4c42-8cd2-16e1da9546cf.yaml\n    interval: 30\n    lastEvaluation: \"2023-02-07T10:16:52.230581232Z\"\n    limit: 0\n    name: insights\n    rules:\n    - alerts: []\n      annotations:\n        description: 'Insights operator is disabled. In order to enable Insights and\n          benefit from recommendations specific to your cluster, please follow steps\n          listed in the documentation: https://docs.openshift.com/container-platform/latest/support/remote_health_monitoring/enabling-remote-health-reporting.html'\n        summary: Insights operator is disabled.\n      duration: 300\n      evaluationTime: 0.000333577\n      health: ok\n      labels:\n        severity: info\n      lastEvaluation: \"2023-02-07T10:16:52.230589049Z\"\n      name: InsightsDisabled\n      query: cluster_operator_conditions{condition=\"Disabled\",name=\"insights\"} ==\n        1\n      state: inactive\n      type: alerting\n    - alerts:\n      - activeAt: \"2023-01-12T10:19:22.229190558Z\"\n        annotations:\n          description: Simple content access (SCA) is not enabled. Once enabled, Insights\n            Operator can automatically import the SCA certificates from Red Hat OpenShift\n            Cluster Manager making it easier to use the content provided by your Red\n            Hat subscriptions when creating container images. See https://docs.openshift.com/container-platform/latest/cicd/builds/running-entitled-builds.html\n            for more information.\n          summary: Simple content access certificates are not available.\n        labels:\n          alertname: SimpleContentAccessNotAvailable\n          condition: SCANotAvailable\n          endpoint: metrics\n          instance: 10.30.0.6:9099\n          job: cluster-version-operator\n          name: insights\n          namespace: openshift-cluster-version\n          pod: cluster-version-operator-688999f8cd-m7lb8\n          reason: NotFound\n          service: cluster-version-operator\n          severity: info\n        state: firing\n        value: \"1e+00\"\n      annotations:\n        description: Simple content access (SCA) is not enabled. Once enabled, Insights\n          Operator can automatically import the SCA certificates from Red Hat OpenShift\n          Cluster Manager making it easier to use the content provided by your Red\n          Hat subscriptions when creating container images. See https://docs.openshift.com/container-platform/latest/cicd/builds/running-entitled-builds.html\n          for more information.\n        summary: Simple content access certificates are not available.\n      duration: 300\n      evaluationTime: 0.000599797\n      health: ok\n      labels:\n        severity: info\n      lastEvaluation: \"2023-02-07T10:16:52.230924882Z\"\n      name: SimpleContentAccessNotAvailable\n      query: max_over_time(cluster_operator_conditions{condition=\"SCANotAvailable\",name=\"insights\",reason=\"NotFound\"}[5m])\n        == 1\n      state: firing\n      type: alerting\nstatus: success\n</code></pre>"},{"location":"subcmds/alert/#rules","title":"<code>rules</code>","text":"<p>PrometheusRules present in the cluster; it's possible to filter them, as an example by the status, if we are interested only for the <code>firing</code> ones we can execute: <pre><code>$ omc prometheus alertrules -s firing\nRULE                                 STATE    AGE   ALERTS   ACTIVE SINCE\nClusterNotUpgradeable                firing   10s   1        10 Jan 23 10:20 UTC\nUpdateAvailable                      firing   17s   1        22 Jan 23 04:59 UTC\nSimpleContentAccessNotAvailable      firing   23s   1        12 Jan 23 10:19 UTC\nAPIRemovedInNextEUSReleaseInUse      firing   22s   2        05 Feb 23 17:50 UTC\nWatchdog                             firing   1s    1        10 Jan 23 10:45 UTC\nAlertmanagerReceiversNotConfigured   firing   15s   1        22 Sep 22 14:32 UTC\nKubeJobCompletion                    firing   8s    1        18 Oct 22 19:37 UTC\nKubeJobFailed                        firing   8s    3        22 Sep 22 14:33 UTC\nCsvAbnormalFailedOver2Min            firing   21s   1        12 Jan 23 10:14 UTC\n</code></pre></p>  Get AlertingRules by group name <pre><code>$ omc prometheus alertrule --group etcd\nRULE                              STATE      AGE   ALERTS   ACTIVE SINCE\netcdMembersDown                   inactive   9s    0        ----\netcdNoLeader                      inactive   9s    0        ----\netcdGRPCRequestsSlow              inactive   9s    0        ----\netcdMemberCommunicationSlow       inactive   9s    0        ----\netcdHighNumberOfFailedProposals   inactive   9s    0        ----\netcdHighFsyncDurations            inactive   9s    0        ----\netcdHighFsyncDurations            inactive   9s    0        ----\netcdHighCommitDurations           inactive   9s    0        ----\netcdBackendQuotaLowSpace          inactive   9s    0        ----\netcdExcessiveDatabaseGrowth       inactive   9s    0        ----\n</code></pre>"},{"location":"subcmds/config/","title":"<code>omc config &lt;flags&gt;</code>","text":""},{"location":"subcmds/describe/","title":"<code>omc describe &lt;args&gt;</code>","text":"<pre><code>$ omc describe pod my-pod\n</code></pre>"},{"location":"subcmds/get/","title":"<code>omc get &lt;args&gt; [&lt;flags&gt;]</code>","text":"<pre><code># Get commands with basic output\nomc get services                          # List all services in the namespace\nomc get pods --all-namespaces             # List all pods in all namespaces\nomc get pods -o wide                      # List all pods in the current namespace, with more details\nomc get deployment my-dep                 # List a particular deployment\nomc get pods                              # List all pods in the namespace\nomc get pod my-pod -o yaml                # Get a pod's YAML\n</code></pre> Output format Description <code>-o=json</code> Output a JSON formatted API object <code>-o=jsonpath=&lt;template&gt;</code> Print the fields defined in a jsonpath expression <code>-o=name</code> Print only the resource name and nothing else <code>-o=wide</code> Output in the plain-text format with any additional information, and for pods, the node name is included <code>-o=yaml</code> Output a YAML formatted API object <code>-o=custom-columns</code> Allows a user to customise the fields that are output and their corresponding header names"},{"location":"subcmds/subcommands/","title":"Subcommands","text":"<p><code>omc</code> supports the following subcomands:</p> Subcommand Description <code>alert</code> Check for Prometheus alert in the cluster. <code>delete</code> Delete must-gather from the saved ones. <code>describe</code> Print a detailed description of of the selected resource(s). <code>etcd</code> <code>get</code> <code>logs</code> Print the logs for a container in a pod <code>machine-config</code> <code>project</code> Switch to another project <code>uget</code> <code>upgrade</code>"}]}